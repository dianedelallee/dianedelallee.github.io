I"ù0<p>We will try to use MongoDB with a Django project. To do that we will use the library called <a href="https://github.com/nesdis/djongo">Djongo</a>. I have take the previous project (<a href="{% post_url 2020-01-15-django-in-a-docker %}">Django-in-a-docker</a>) and I have removed all files relative to the production environment. I have built and run my container to check that everything works as expected. I have finally created a Super User to access the DB.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre>docker-compose up -d --build
docker-compose exec web python manage.py migrate --noinput
docker-compose exec web python manage.py createsuperuser
</pre></td></tr></tbody></table></code></pre></div></div>

<p>First, we will need to add Djongo to our requirements.txt and rebuild our docker image. We also need to specify the version for sqlparse because Django is expected a special one.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="c1">#requirements.txt
</span><span class="n">sqlparse</span><span class="o">==</span><span class="mf">0.2</span><span class="p">.</span><span class="mi">4</span>
<span class="n">Django</span><span class="o">==</span><span class="mf">2.2</span><span class="p">.</span><span class="mi">9</span>
<span class="n">djongo</span><span class="o">==</span><span class="mf">1.3</span><span class="p">.</span><span class="mi">0</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Once it is done, lets change on docker-compose.yml to reference the mongoDB</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="rouge-code"><pre><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.7'</span>

<span class="na">services</span><span class="pi">:</span>
<span class="na">web</span><span class="pi">:</span>
<span class="na">build</span><span class="pi">:</span> <span class="s">./app</span>
<span class="na">command</span><span class="pi">:</span> <span class="s">python manage.py runserver 0.0.0.0:8000</span>
<span class="na">volumes</span><span class="pi">:</span> <span class="s">- ./app/:/usr/src/app/</span>
<span class="na">ports</span><span class="pi">:</span> <span class="s">- 8000:8000</span>
<span class="na">env_file</span><span class="pi">:</span> <span class="s">- ./.env.dev</span>
<span class="na">depends_on</span><span class="pi">:</span> <span class="s">- mongodb</span>
<span class="na">mongodb</span><span class="pi">:</span>
<span class="na">image</span><span class="pi">:</span> <span class="s">mongo</span>
<span class="na">volumes</span><span class="pi">:</span> <span class="s">- ./data-db:/data/db</span>
<span class="na">ports</span><span class="pi">:</span> <span class="s">- 27017:27017</span>

<span class="na">volumes</span><span class="pi">:</span>
<span class="na">postgres_data</span><span class="pi">:</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Once it is done, we can change in settings.py our database config and update the fields also in .env.dev</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="c1">#settings.py
</span>
<span class="n">DATABASES</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'default'</span><span class="p">:</span> <span class="p">{</span>
    <span class="s">'ENGINE'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"NOSQL_ENGINE"</span><span class="p">,</span> <span class="s">"djongo"</span><span class="p">),</span>
    <span class="s">'NAME'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"NOSQL_NAME"</span><span class="p">,</span> <span class="s">"test"</span><span class="p">),</span>
    <span class="s">'HOST'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"NOSQL_HOST"</span><span class="p">,</span> <span class="s">"mongodb"</span><span class="p">),</span>
    <span class="s">'ENFORCE_SCHEMA'</span><span class="p">:</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">"NOSQL_ENFORCE_SCHEMA"</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
</pre></td><td class="rouge-code"><pre><span class="c1">#.env.dev
</span><span class="n">DEBUG</span><span class="o">=</span><span class="mi">1</span>
<span class="n">SECRET_KEY</span><span class="o">=</span><span class="n">svmv</span><span class="o">+</span><span class="n">s</span><span class="p">(</span><span class="n">fwlwzxq7d7kmiu_m9</span><span class="o">^</span><span class="n">hvu</span>\<span class="err">$</span><span class="o">^</span><span class="n">wi5q34zh5_s2</span><span class="o">=</span><span class="n">khsqpcv</span>
<span class="n">DJANGO_ALLOWED_HOSTS</span><span class="o">=</span><span class="n">localhost</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span> <span class="p">[::</span><span class="mi">1</span><span class="p">]</span> <span class="mf">0.0</span><span class="p">.</span><span class="mf">0.0</span>
<span class="n">NOSQL_ENGINE</span><span class="o">=</span><span class="n">djongo</span>
<span class="n">NOSQL_NAME</span><span class="o">=</span><span class="n">test</span>
<span class="n">NOSQL_HOST</span><span class="o">=</span><span class="n">mongodb</span>
<span class="n">NOSQL_ENFORCE_SCHEMA</span><span class="o">=</span><span class="bp">False</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Perfect, now we will create a model called Article which for now will only contains a title. Tihis model soulh be into my_website/models.py</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Article</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
<span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">TextField</span><span class="p">()</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>In to the directory my_website lets create a admin.py file and paste the following code</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">django.contrib</span> <span class="kn">import</span> <span class="n">admin</span>
<span class="k">from</span><span class="p">.</span><span class="n">models</span> <span class="kn">import</span> <span class="nn">Article</span>

<span class="k">class</span> <span class="nc">ArticleAdmin</span><span class="p">(</span><span class="n">admin</span><span class="p">.</span><span class="n">ModelAdmin</span><span class="p">):</span>
<span class="n">list_display</span> <span class="o">=</span> <span class="p">[</span><span class="s">'id'</span><span class="p">,</span> <span class="s">'title'</span><span class="p">]</span>
<span class="n">list_display_links</span> <span class="o">=</span> <span class="p">[</span><span class="s">'id'</span><span class="p">,</span> <span class="p">]</span>
<span class="n">search_fields</span> <span class="o">=</span> <span class="p">[</span><span class="s">'title'</span><span class="p">]</span>

<span class="n">admin</span><span class="p">.</span><span class="n">site</span><span class="p">.</span><span class="n">register</span><span class="p">(</span><span class="n">Article</span><span class="p">,</span> <span class="n">ArticleAdmin</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>You can now rebuild the docker image and run the migrations, and create a superuser</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="rouge-code"><pre>docker-compose up <span class="nt">-d</span> <span class="nt">--build</span>
docker-compose <span class="nb">exec </span>web python manage.py makemigrations
docker-compose <span class="nb">exec </span>web python manage.py migrate <span class="nt">--fake-initial</span>
docker-compose <span class="nb">exec </span>web python manage.py migrate createsuperuser
</pre></td></tr></tbody></table></code></pre></div></div>

<p>If you try to reach the <a href="http://0.0.0.0:8000/admin">webserver</a>, you should be able to log in and see your Article model. If you try to create one, you can only define the title. If you go back to the Article model file, you can now add other attributes, like those ones for instance</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
</pre></td><td class="rouge-code"><pre><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>

<span class="k">class</span> <span class="nc">Article</span><span class="p">(</span><span class="n">models</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
<span class="n">title</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">TextField</span><span class="p">()</span>
<span class="n">Author</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">TextField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">tag</span> <span class="o">=</span> <span class="n">models</span><span class="p">.</span><span class="n">CharField</span><span class="p">(</span><span class="n">default</span><span class="o">=</span><span class="bp">None</span><span class="p">,</span> <span class="n">blank</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">max_length</span><span class="o">=</span><span class="mi">255</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>Just go back to the admin page and reload it. You should, without applying any migrations, see our new fields. It means that your MongoDB is properly defined and you can modify your model as you want.</p>

<p>you will be able to find the project <a href="https://github.com/dianedelallee/django-with-mongodb">here</a></p>
:ET