<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Diane Delall√©e blog</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>I decided to write a CSS library</title>
        <description>&lt;p&gt;I have decided to implement a CSS library and published it to npm.&lt;/p&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;The goal here is to discovered several aspects of developing a public library:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Better knowledge on SCSS&lt;/li&gt;
  &lt;li&gt;Learn how to deploy with npm and how to install properly throught it&lt;/li&gt;
  &lt;li&gt;Learn about &lt;code class=&quot;highlighter-rouge&quot;&gt;Release&lt;/code&gt; in Github&lt;/li&gt;
  &lt;li&gt;Learn about &lt;code class=&quot;highlighter-rouge&quot;&gt;Actions&lt;/code&gt; in Github*&lt;/li&gt;
  &lt;li&gt;Learn how to write a doc for a library&lt;/li&gt;
  &lt;li&gt;Learn how to inform about a new version of the library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course all of this aspects are under improvments, and some mistakes can be made.&lt;/p&gt;

&lt;h2 id=&quot;what-i-want-to-do&quot;&gt;What I want to do&lt;/h2&gt;

&lt;p&gt;The goal is to develop a small library that offer basic css components. To provide information about the release
I would like to use the release in Github. The library will be published in NPM to be able to import it easilly in other projects.&lt;/p&gt;

&lt;p&gt;Of course, it ould be interesting to document a bit the library to help user to use it in their own projects.&lt;/p&gt;

&lt;p&gt;Last but not least, I would like to notify a list of email addresses by email when a new version of lib is available and also
to tweet about the new version!&lt;/p&gt;

&lt;h2 id=&quot;lets-work-on-it&quot;&gt;Lets work on it.&lt;/h2&gt;

&lt;p&gt;You could find the project &lt;a href=&quot;https://github.com/dianedelallee/artemis&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will write several articles to explain step-by-step the project and to be able to provide more details on each aspect.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 17:01:00 +0100</pubDate>
        <link>http://localhost:4000//posts/why-i-wrote-a-css-lib/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/why-i-wrote-a-css-lib/</guid>
      </item>
    
      <item>
        <title>Block website to improve focuses</title>
        <description>&lt;p&gt;As I am now fully working from home, break and hot beverage breaks are totally different. No more breaks where you can talk with 
colleagues, no more ‚Äúforced‚Äù break to eat croissants ü•ê. I am not really good to take a real break for few minutes not in front of my computer.&lt;/p&gt;

&lt;p&gt;Usually, I go to some websites like twitter or Linkedin to check some news, but it can be unmanageable. To help me focus, I have decided
at the beginning of the year, to put several actions in place.&lt;/p&gt;

&lt;h2 id=&quot;block-some-websites-during-working-hours&quot;&gt;Block some websites during working hours.&lt;/h2&gt;
&lt;p&gt;Those website did not provide me a lot of useful information, so I have decided to block them during working hours, and If needed I
can still check them after those hours. This helps me a lot to stay focuses on my work.&lt;/p&gt;

&lt;p&gt;here is the code to do so:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/dianedelallee/93472ae62fde8288606c1c2a6ed35ffb.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;My computer for work is under Ubuntu, so this is how I run automatically this file.
In your terminal&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;crontab &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It will open the file and I have only added this line&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;45 7 * * MON-FRI /usr/bin/python3 ~/desktop/python_website_blocker.py &amp;gt;&amp;gt; ~/cron.log 2&amp;gt;&amp;amp;1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It means that each morning at 7:45AM my ypthon file which is called &lt;code class=&quot;highlighter-rouge&quot;&gt;python_website_blocker.py&lt;/code&gt; will be execute.&lt;/p&gt;

&lt;h2 id=&quot;still-needwant-to-read-technical-articles&quot;&gt;Still need/want to read technical articles&lt;/h2&gt;
&lt;p&gt;Really easily, I selected some interesting authors, or blog, take their RSS feed link and use &lt;a href=&quot;https://feedly.com/&quot;&gt;Feedly&lt;/a&gt;
to read all my articles without any distractions.&lt;/p&gt;

&lt;p&gt;I am really happy with those decisions, and feeling really less guilty at the end of some days!&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Mar 2021 00:44:00 +0100</pubDate>
        <link>http://localhost:4000//posts/block-website-to-improve-focus/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/block-website-to-improve-focus/</guid>
      </item>
    
      <item>
        <title>2020 review and 2021 Goals</title>
        <description>&lt;p&gt;We are already in March 2021 so this is time to make a review of 2020 and also to set new goals/behaviour for 2021.&lt;/p&gt;

&lt;h2 id=&quot;2020-review&quot;&gt;2020 review&lt;/h2&gt;
&lt;h3 id=&quot;what-i-planed-to-do-one-year-ago&quot;&gt;What I planed to do one year ago&lt;/h3&gt;

&lt;h4 id=&quot;profesional&quot;&gt;Profesional&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Write an article on my blog twice a month
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Was a bit excessive, it take times to learn new skills and write about it.&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keep an optimistic mindset, stay positive in main situation
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Try to do so, but this is still in progress.&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Go to 2 conferences
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Even with Covid 19, I achieved to listen to the Python Web Summit, and go another conference plans for April 2021. Conferences I planned to go where cancelled&lt;/span&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Read at least one book relative to Software and Organization by quarter
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Forget about this goal. I read a lot of documentation about Angular (new techno for me), and about gitlab. Will probably define books to read for this year&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Be proactive and not lazy - discover new technologies and get out of my comfort zone
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Got a new job, so I needed to learn new technologies, new logics, and get out my confort zone !&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;personnal&quot;&gt;Personnal&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Go to the gym at least 3 times a week (do that since 4 months)
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Achieve to go to the gym before Covid, and now doing Freeletics at home, 4 times a week&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Cook my meal for all lunches during the week
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Working from home helps a lot on this one, otherwise I think I achieved to do that 4 times a week&lt;/span&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Drink less than one coffee a day
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;No more coffee during week, only on the weekend!&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Do not buy accessories coming from all around the world (lets see if I can do the same for clothes)
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Decrease by 50%, and most of the stuff ordered online are coming from close country&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Drink less alcohol during the week (start by ordering small beer instead of large one)
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;No more alcohol during week for two months now, and really decrease alcohol during weekend. Feel great about it&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Do meditation twice a week before sleeping
    &lt;ul&gt;
      &lt;li&gt;&lt;span style=&quot;color:#007bff; font-weight:bold;&quot;&gt;Total failure on this one, but instead try to go walking at least 30 minutes during week&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;what-also-happened-during-the-year&quot;&gt;What also happened during the year&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;I got a new job. I am now working at &lt;strong&gt;&lt;a href=&quot;https://hacknowledge.com/&quot;&gt;Hacknowledge&lt;/a&gt;&lt;/strong&gt;. Still working with &lt;strong&gt;Python&lt;/strong&gt; (tornado, sqlAchemy, flask, docker, gitlab). 
Also working with &lt;strong&gt;Angular&lt;/strong&gt;, &lt;strong&gt;Material Design&lt;/strong&gt; and I quite love it.&lt;/li&gt;
  &lt;li&gt;I am &lt;strong&gt;working from home&lt;/strong&gt; full-time and I (finally) achieve to put all the setup I needed to be fully focused and efficient.&lt;/li&gt;
  &lt;li&gt;I will start a new adventure in few months and become president of the &lt;a href=&quot;https://leromandie.ch/&quot;&gt;association&lt;/a&gt; that I am involved.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2021-goals&quot;&gt;2021 Goals&lt;/h2&gt;

&lt;h3 id=&quot;professionally&quot;&gt;Professionally&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;üéô Go to &lt;strong&gt;2 conferences&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;‚úçüèº &lt;strong&gt;Write an article&lt;/strong&gt; on my blog once a month -&amp;gt; try to write small articles about stuff I discovered at work.&lt;/li&gt;
  &lt;li&gt;üìö &lt;strong&gt;Read books&lt;/strong&gt; relative to work (The unicorn project, Unfu*k yourself, Design pattern, something about SqlAchemy)&lt;/li&gt;
  &lt;li&gt;üñ• Improve skills on &lt;strong&gt;Design pattern, and data base&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;üßòüèΩ‚Äç‚ôÄÔ∏è &lt;strong&gt;Be more rigorous&lt;/strong&gt; when I do pull requests and to document new project&lt;/li&gt;
  &lt;li&gt;Reduce my job to 90%&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;personally&quot;&gt;Personally&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;üö∂üèΩ‚Äç‚ôÄÔ∏èWalk at least 5000 steps by day&lt;/li&gt;
  &lt;li&gt;No more alcohol üç∫ and coffee ‚òï during week&lt;/li&gt;
  &lt;li&gt;‚è∞ Be more organized to split between job, association and hobby&lt;/li&gt;
  &lt;li&gt;ü§∏üèΩ‚Äç‚ôÄÔ∏è Freeletics 4 times a week&lt;/li&gt;
  &lt;li&gt;Be able to clean the appartment and do not create lots of bazaars all over the place&lt;/li&gt;
  &lt;li&gt;Reduce time spent on some websites where I infinite scroll (Twitter, Linkedin, LeMatin, instagram, youtube, ‚Ä¶.)&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 01 Mar 2021 00:00:00 +0100</pubDate>
        <link>http://localhost:4000//posts/review-2020-and-2021-goals/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/review-2020-and-2021-goals/</guid>
      </item>
    
      <item>
        <title>Feedly and RSS flux for this website</title>
        <description>&lt;p&gt;Few weeks ago, I decided to adopt new behaviour for 2021 (another article will come soon). One of those new behaviour is
to stop infinite scroll on some websites like twitter.&lt;/p&gt;

&lt;p&gt;But how to get notify about interesting articles?&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;https://feedly.com/&quot;&gt;Feedly&lt;/a&gt; to load some RSS flux that I want to follow, and that‚Äôs it. 
Only articles that are relevant are shown in this app, and when I want to take a break, I can read them from feedly without
be tempted to navigate and loose myself in the web.&lt;/p&gt;

&lt;h2 id=&quot;reading-rss-now-but-how-this-website-generate-rss-about-my-articles&quot;&gt;Reading RSS now, but how this website generate RSS about my articles.&lt;/h2&gt;

&lt;p&gt;This &lt;a href=&quot;https://github.com/cotes2020/jekyll-theme-chirpy&quot;&gt;Jekyll theme&lt;/a&gt; already provide a RSS system.
The code that generate the RSS flux is in the &lt;a href=&quot;https://github.com/dianedelallee/dianedelallee.github.io/blob/master/feed_old.xml&quot;&gt;feed.xml file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was not very happy with the RSS flux provided by the theme, cause it truncate the content to 200 characters (cf &lt;a href=&quot;https://github.com/dianedelallee/dianedelallee.github.io/blob/master/feed_old.xml#L53&quot;&gt;line 53&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I try to remove this truncate, but I was still not very pleased with the result. To not loose this RSS generator, I renamed the file to &lt;code class=&quot;highlighter-rouge&quot;&gt;feed_old.xml&lt;/code&gt; and instead I use another xml template to generate my RSS flux.
You can find it &lt;a href=&quot;https://github.com/dianedelallee/dianedelallee.github.io/blob/master/feed_old.xml&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can see the result of my RSS flux in &lt;a href=&quot;https://fatalement.com/feed.xml&quot;&gt;https://fatalement.com/feed.xml&lt;/a&gt; and it looks like that in me feedly app:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://fatalement.com/assets/img/sample/feedly_fatalement.png&quot; alt=&quot;Feedly rss flux&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and this is how an article looks like when you read it&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://fatalement.com/assets/img/sample/feedly_article.png&quot; alt=&quot;Feedly show article&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 27 Feb 2021 04:36:00 +0100</pubDate>
        <link>http://localhost:4000//posts/feedly-and-rss/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/feedly-and-rss/</guid>
      </item>
    
      <item>
        <title>Funding with Github</title>
        <description>&lt;p&gt;Few days ago, I decided to create an account in &lt;a href=&quot;https://www.buymeacoffee.com/&quot;&gt;Buy me a coffe ‚òï&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The goal: allow people to give me a donation üí∞ is they want to support the blog or some of my github projects.&lt;/p&gt;

&lt;p&gt;Why? Just to help me covering the hosting cost of my website.&lt;/p&gt;

&lt;p&gt;Now that my donation account is setup, I just need to inform the community. I only added a small button to my website that
links to this donation page. But how can I share that on github?&lt;/p&gt;

&lt;h2 id=&quot;in-github&quot;&gt;In Github&lt;/h2&gt;

&lt;h3 id=&quot;for-a-specific-project&quot;&gt;For a specific project&lt;/h3&gt;
&lt;p&gt;On the root folder or your project you want to promote, create a new folder &lt;code class=&quot;highlighter-rouge&quot;&gt;.github&lt;/code&gt;. In this folder create a &lt;code class=&quot;highlighter-rouge&quot;&gt;FUNDING.yml&lt;/code&gt; file
that will contains the following lines:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;your github username&amp;gt;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;patreon&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Patreon username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;open_collective&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Open Collective username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;ko_fi&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Ko-fi username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;tidelift&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Tidelift platform-name/package-name e.g., npm/babel&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;community_bridge&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Community Bridge project-name e.g., cloud-foundry&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;liberapay&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Liberapay username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;issuehunt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single IssueHunt username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;otechie&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Replace with a single Otechie username&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;custom&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://www.buymeacoffee.com/dianedelallee'&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# or any other custom website your want to redirect the user&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;for-all-your-project&quot;&gt;For all your project&lt;/h3&gt;
&lt;p&gt;You want to allow donation across all your repositories? There is an easy way.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to your github profile&lt;/li&gt;
  &lt;li&gt;If you do not have a project called &lt;code class=&quot;highlighter-rouge&quot;&gt;.github&lt;/code&gt; create it, otherwise just open it. (cf &lt;a href=&quot;https://github.com/dianedelallee/.github&quot;&gt;mine&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add a &lt;code class=&quot;highlighter-rouge&quot;&gt;FUNDING.yml&lt;/code&gt;  file with exactly what we have define in the other step.&lt;/li&gt;
  &lt;li&gt;That‚Äôs it. Now if you go to another repository, you will see the Sponsor button on the top right of your repo, and
on the left side menu, you will see the section ‚ÄúSponsor this project‚Äù&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;want-to-support-me&quot;&gt;Want to support me?&lt;/h2&gt;

&lt;p&gt;Just make a donation &lt;a href=&quot;https://www.buymeacoffee.com/dianedelallee&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 26 Feb 2021 11:36:00 +0100</pubDate>
        <link>http://localhost:4000//posts/github-funding/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/github-funding/</guid>
      </item>
    
      <item>
        <title>Play a bit with doctest</title>
        <description>&lt;p&gt;I discover randomly the &lt;a href=&quot;https://docs.python.org/3/library/doctest.html&quot;&gt;doctest&lt;/a&gt; module and decided to play a bit with it. 
This module allows you to write tests inside your docstring and to execute it. 
Can be useful if you want to provide easily some examples on how to use the function-&lt;/p&gt;

&lt;h2 id=&quot;easy-example&quot;&gt;Easy example&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;doctest&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    Returns a * b.
    Works with numbers:
    &amp;gt;&amp;gt;&amp;gt; my_function(2, 3)
    6
    and strings:
    &amp;gt;&amp;gt;&amp;gt; my_function('a', 3)
    'aaa'
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doctest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to run the test, and see the results, you need to execute your file with the following command&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;python3 my_file_name.py &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example-with-a-class&quot;&gt;Example with a class&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;doctest&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;MyClass
    &amp;gt;&amp;gt;&amp;gt; m = MyClass()
    &amp;gt;&amp;gt;&amp;gt; m.hello()
    hello
    &amp;gt;&amp;gt;&amp;gt; m.world()
    world
    &quot;&quot;&quot;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;method hello&quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;method world&quot;&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;__main__&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doctest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testmod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;more-examples-and-full-project&quot;&gt;More examples and full project&lt;/h2&gt;

&lt;p&gt;I implemented more examples with complex structures and doctest string in a specific RST file in 
&lt;a href=&quot;https://github.com/dianedelallee/Doctest&quot;&gt;this Github repo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2021 08:18:00 +0100</pubDate>
        <link>http://localhost:4000//posts/doctest/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/doctest/</guid>
      </item>
    
      <item>
        <title>Abstract Factory in python</title>
        <description>&lt;p&gt;For 2021, I decided to implement several design pattern to become more friendly with them and start using in my projects.&lt;/p&gt;

&lt;h2 id=&quot;first-implemented-pattern-abstract-factory&quot;&gt;First implemented pattern: Abstract Factory&lt;/h2&gt;

&lt;h2 id=&quot;goal-of-the-pattern&quot;&gt;Goal of the pattern&lt;/h2&gt;

&lt;p&gt;Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.
The idea is to abstract the creation of objects depending on business logic, platform choice, etc.&lt;/p&gt;

&lt;p&gt;The client code calls the creation methods of a factory object instead of creating products directly with a constructor 
call (new operator). Since a factory corresponds to a single product variant, all its products will be compatible.&lt;/p&gt;

&lt;p&gt;Client code works with factories and products only through their abstract interfaces. 
This lets the client code work with any product variants, created by the factory object. 
You just create a new concrete factory class and pass it to the client code.&lt;/p&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The code&lt;/h2&gt;

&lt;p&gt;You can fin the code relative to this pattern in &lt;a href=&quot;https://github.com/dianedelallee/pythonDesignPattern/tree/master/patterns/creational/abstract_factory&quot;&gt;this Github repo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Jan 2021 01:56:00 +0100</pubDate>
        <link>http://localhost:4000//posts/abstract-factory/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/abstract-factory/</guid>
      </item>
    
      <item>
        <title>Decorator and Structlog</title>
        <description>&lt;p&gt;During the Python web summit organized by &lt;a href=&quot;https://geekle.us/&quot;&gt;Geekle.us&lt;/a&gt;, I listened to an interesting talk about Structlog library.
I decided to play a bit with it and with decorators, I implemented a small project about logging.&lt;/p&gt;

&lt;h2 id=&quot;goal-of-the-project&quot;&gt;Goal of the project&lt;/h2&gt;
&lt;p&gt;Create a decorator that will use structlog to add a logging system to each function of a class.&lt;/p&gt;

&lt;p&gt;One of the goal is to have a trace_id to follow the code and to get easily information about the context when the function is called. 
For instance, the parameters provided to the function and the error message ‚Ä¶&lt;/p&gt;

&lt;h2 id=&quot;different-types-of-output&quot;&gt;Different types of output&lt;/h2&gt;

&lt;h3 id=&quot;development&quot;&gt;Development&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/home/dianedelallee/.local/share/virtualenvs/decoratorStructlog-eT6Dw5f0/bin/python /home/dianedelallee/Desktop/Diane/decoratorStructlog/main.py
2021-02-23T14:20:34.415087Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Before calling the &lt;span class=&quot;k&quot;&gt;function    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=()&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;models.Player.get_name &lt;span class=&quot;nv&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d3b9b48e-ce0e-4cc2-a48c-66cbfd6c0743
2021-02-23T14:20:34.415249Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; trying to get the name of the user &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d3b9b48e-ce0e-4cc2-a48c-66cbfd6c0743
2021-02-23T14:20:34.415300Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; After calling the &lt;span class=&quot;k&quot;&gt;function     &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;models.Player.get_name &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Diane &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;d3b9b48e-ce0e-4cc2-a48c-66cbfd6c0743
2021-02-23T14:20:34.415380Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Before calling the &lt;span class=&quot;k&quot;&gt;function    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=()&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;models.Player.get_age_in_cat_live &lt;span class=&quot;nv&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={}&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;659685aa-4e90-4de5-bb22-44f32ac4fb57
2021-02-23T14:20:34.415418Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; trying to get the aage &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;referencial &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;659685aa-4e90-4de5-bb22-44f32ac4fb57
2021-02-23T14:20:34.415442Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; get &lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;referential            &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;659685aa-4e90-4de5-bb22-44f32ac4fb57
2021-02-23T14:20:34.415461Z &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;info     &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; After calling the &lt;span class=&quot;k&quot;&gt;function     &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;function_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;models.Player.get_age_in_cat_live &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;210 &lt;span class=&quot;nv&quot;&gt;trace_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;659685aa-4e90-4de5-bb22-44f32ac4fb57

Process finished with &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;code 0

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;production&quot;&gt;Production&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/home/dianedelallee/.local/share/virtualenvs/decoratorStructlog-eT6Dw5f0/bin/python /home/dianedelallee/Desktop/Diane/decoratorStructlog/main.py
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;args&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Before calling the function&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;function_name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;models.Player.get_name&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;kwargs&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464028Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;8fdbd416-d109-4671-8b57-cc28a9ebbbe6&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;trying to get the name of the user&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464145Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;8fdbd416-d109-4671-8b57-cc28a9ebbbe6&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;After calling the function&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;function_name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;models.Player.get_name&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;result&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Diane&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464183Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;8fdbd416-d109-4671-8b57-cc28a9ebbbe6&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;args&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Before calling the function&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;function_name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;models.Player.get_age_in_cat_live&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;kwargs&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464245Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1f18db5d-c8dc-4886-8639-2a3baf96ce45&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;trying to get the aage in cat referencial&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464285Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1f18db5d-c8dc-4886-8639-2a3baf96ce45&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;get cat referential&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464313Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1f18db5d-c8dc-4886-8639-2a3baf96ce45&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;After calling the function&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;function_name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;models.Player.get_age_in_cat_live&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;level&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;info&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;result&quot;&lt;/span&gt;: 210,
  &lt;span class=&quot;s2&quot;&gt;&quot;timestamp&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-02-23T14:21:41.464336Z&quot;&lt;/span&gt;,
  &lt;span class=&quot;s2&quot;&gt;&quot;trace_id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;1f18db5d-c8dc-4886-8639-2a3baf96ce45&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

Process finished with &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;code 0
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.structlog.org/en/20.1.0/index.html&quot;&gt;Struct log library&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atymo.me/blog/python_logging.html&quot;&gt;Nice Article about struclog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;full-project&quot;&gt;Full project&lt;/h2&gt;
&lt;p&gt;In &lt;a href=&quot;https://github.com/dianedelallee/decoratorStructlog&quot;&gt;this Github repo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Dec 2020 03:18:00 +0100</pubDate>
        <link>http://localhost:4000//posts/structlog/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/structlog/</guid>
      </item>
    
      <item>
        <title>How to mock function without typing to not use type ignore</title>
        <description>&lt;h2 id=&quot;import-only-for-mypy-an-internal-module&quot;&gt;Import only for mypy an internal module&lt;/h2&gt;
&lt;p&gt;If you need to import a module only for mypy, and do not want to create a circular dependency, you can do like that:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;internal_module&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myModel&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'myModel'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It will only import the internal_module if this fill if read for mypy. 
The quotes allow you to not import on the top of the file for the normal behaviour.&lt;/p&gt;

&lt;h2 id=&quot;import-for-mypy-an-external-module-with-no-mypy&quot;&gt;Import for mypy an external module with no mypy&lt;/h2&gt;

&lt;p&gt;You are probably use an external library that do not use mypy. This is specially a problem if this library is use as a decorator&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;the_function_without_mypy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;external_lib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_function_without_mypy&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;the_function_without_mypy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... my amazing code ...
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;By doing that, you do not take into account the mypy of the decorator but it will only check the mypy of your function.&lt;/p&gt;

&lt;p&gt;You can also do the same process if you import a class with some methods on it&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TheModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function_not_typed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;external_lib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TheModule&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TheModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function_not_typed&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... my amazing code ...
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Last but not least, if you want to have a smaller import section, you can define all your ‚Äúmocking‚Äù mypy function in a 
dedicated file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;# the dedicated file called helper_mypy.py
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TypeVar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'F'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TheModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;function_not_typed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;# the main file
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;typing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TYPE_CHECKING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;helper_mypy&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;external_lib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TheModule&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TheModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function_not_typed&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;my_function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# ... my amazing code ...
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that is it! You should now be able to not write &lt;code class=&quot;highlighter-rouge&quot;&gt;# type: ignore&lt;/code&gt; near your decorator.&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Aug 2020 02:25:00 +0200</pubDate>
        <link>http://localhost:4000//posts/mypy-avoid-type-ignore/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/mypy-avoid-type-ignore/</guid>
      </item>
    
      <item>
        <title>How to use cache to install python lib with Gitlab CI</title>
        <description>&lt;p&gt;If you have a CI process with multiple job that needs to install the same libraries, it can be very time consuming.
So you probably want to use a cache to not download each those libraries that you already have.&lt;/p&gt;

&lt;p&gt;Lets start with a small ci file and we will see after how can we add configuration to tell gitlab to use the cache&lt;/p&gt;
&lt;h2 id=&quot;small-example-of-gitlab-ciyml-file&quot;&gt;Small Example of gitlab-ci.yml file&lt;/h2&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;stages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Initialization&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;project&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Initialization&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Mypy&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install mypy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to the source code&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mypy --config-file &amp;lt;myConfigFile&amp;gt; -p &amp;lt;package to check&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Pylint&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install pylint&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to the source code&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pylint --rcfile &amp;lt;myConfigFile&amp;gt; &amp;lt;path to check&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Test&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to my test&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pytest&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# or coverage run ....&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-use-the-cache&quot;&gt;How to use the cache&lt;/h2&gt;

&lt;p&gt;You need to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;variables&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;cache&lt;/code&gt; attribute at the top of the file. By defining a static key to the path
it will share the cache across branch and across pipeline.&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;stages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Initialization&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Change pip's cache directory to be inside the project directory since we can&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# only cache local items.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;PIP_CACHE_DIR&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$CI_PROJECT_DIR/.cache/pip&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Pip's cache doesn't store the python packages&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# https://pip.pypa.io/en/stable/reference/pip_install/#caching&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# If you want to also cache the installed packages, you have to install&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# them in a virtualenv and cache it as well.&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;a-fixed-name&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.cache/pip&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;venv/&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Init&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;project&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Initialization&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install virtualenv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtualenv venv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;source venv/bin/activate&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Mypy&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install virtualenv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtualenv venv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;source venv/bin/activate&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install mypy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to the source code&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mypy --config-file &amp;lt;myConfigFile&amp;gt; -p &amp;lt;package to check&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Pylint&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install pylint&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to the source code&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pylint --rcfile &amp;lt;myConfigFile&amp;gt; &amp;lt;path to check&amp;gt;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Test&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;QualityAndTest&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;link to my docker container&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path/to/the/project&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install virtualenv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;virtualenv venv&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;source venv/bin/activate&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd &amp;lt;path to my test&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pytest&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# or coverage run ....&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that‚Äôs all. Now each jobs is sharing the same cached and it should use it instead of downloading everything from Pypi.&lt;/p&gt;
&lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;

&lt;p&gt;You are new with gitlab-ci and need a default scripts.&lt;/p&gt;

&lt;p&gt;For Python : &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml&quot;&gt;Python Ci File&lt;/a&gt;
For Django : &lt;a href=&quot;https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Django.gitlab-ci.yml&quot;&gt;Django Ci File&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking for other language: 
&lt;a href=&quot;https://docs.gitlab.com/ee/ci/examples/#cicd-templates&quot;&gt;Check the templates&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Aug 2020 07:25:00 +0200</pubDate>
        <link>http://localhost:4000//posts/gitlab-use-cache-to-install-lib/</link>
        <guid isPermaLink="true">http://localhost:4000/posts/gitlab-use-cache-to-install-lib/</guid>
      </item>
    
  </channel>
</rss>
