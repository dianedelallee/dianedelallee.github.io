<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://localhost:4000</id><title>Fatalement</title><subtitle>Diane Delallée blog</subtitle> <updated>2021-02-24T10:47:03+01:00</updated> <author> <name>Diane Delallée</name> <uri>http://localhost:4000</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator> <rights> © 2021 Diane Delallée </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Play a bit with doctest</title><link href="http://localhost:4000/posts/doctest/" rel="alternate" type="text/html" title="Play a bit with doctest" /><published>2021-02-23T08:18:00+01:00</published> <updated>2021-02-24T10:47:03+01:00</updated> <id>http://localhost:4000/posts/doctest/</id> <content src="http://localhost:4000/posts/doctest/" /> <author> <name>Diane Delallée</name> </author> <category term="Blog" /> <category term="Python" /> <summary>I discover randomly the doctest module and decided to play a bit with it. This module allows you to write tests inside your docstring and to execute it. Can be useful if you want to provide easil...</summary> </entry> <entry><title>Decorator and Structlog</title><link href="http://localhost:4000/posts/structlog/" rel="alternate" type="text/html" title="Decorator and Structlog" /><published>2020-12-08T03:18:00+01:00</published> <updated>2021-02-24T10:47:03+01:00</updated> <id>http://localhost:4000/posts/structlog/</id> <content src="http://localhost:4000/posts/structlog/" /> <author> <name>Diane Delallée</name> </author> <category term="Blog" /> <category term="Python" /> <summary>During the Python web summit organized by Geekle.us, I listened to an interesting talk about Structlog library. I decided to play a bit with it and with decorators, I implemented a small project ab...</summary> </entry> <entry><title>How to mock function without typing to not use type ignore</title><link href="http://localhost:4000/posts/mypy-avoid-type-ignore/" rel="alternate" type="text/html" title="How to mock function without typing to not use type ignore" /><published>2020-08-27T02:25:00+02:00</published> <updated>2021-02-24T10:47:03+01:00</updated> <id>http://localhost:4000/posts/mypy-avoid-type-ignore/</id> <content src="http://localhost:4000/posts/mypy-avoid-type-ignore/" /> <author> <name>Diane Delallée</name> </author> <category term="Blog" /> <category term="Python" /> <summary>Import only for mypy an internal module If you need to import a module only for mypy, and do not want to create a circular dependency, you can do like that: 1 2 3 4 5 6 7 8 from typing import TYPE...</summary> </entry> <entry><title>How to use cache to install python lib with Gitlab CI</title><link href="http://localhost:4000/posts/gitlab-use-cache-to-install-lib/" rel="alternate" type="text/html" title="How to use cache to install python lib with Gitlab CI" /><published>2020-08-07T07:25:00+02:00</published> <updated>2021-02-24T10:47:03+01:00</updated> <id>http://localhost:4000/posts/gitlab-use-cache-to-install-lib/</id> <content src="http://localhost:4000/posts/gitlab-use-cache-to-install-lib/" /> <author> <name>Diane Delallée</name> </author> <category term="Blog" /> <category term="CI" /> <summary>If you have a CI process with multiple job that needs to install the same libraries, it can be very time consuming. So you probably want to use a cache to not download each those libraries that you...</summary> </entry> <entry><title>Lolcommits</title><link href="http://localhost:4000/posts/lolcommits/" rel="alternate" type="text/html" title="Lolcommits" /><published>2020-06-17T10:25:00+02:00</published> <updated>2021-02-24T10:47:03+01:00</updated> <id>http://localhost:4000/posts/lolcommits/</id> <content src="http://localhost:4000/posts/lolcommits/" /> <author> <name>Diane Delallée</name> </author> <category term="Blog" /> <category term="commit" /> <summary>Few months ago, I discovered this really funny repo: lolcommits. It will take a picture of you each time you are making a commit. This is really fun to see how your evolution accross month. How to...</summary> </entry> </feed>
